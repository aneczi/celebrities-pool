{
	// Place your sack-of-celebrities workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
  // }
  "Arrow function component": {
    "scope": "typescript, tsx, typescriptreact",
    "prefix": "tsafc",
    "body": [
      "import React from 'react';",
      "import PropTypes from 'prop-types';",
      "",
      "const propTypes = {}",
      "const defaultProps = {}",
      "",
      "type Props = PropTypes.InferProps<typeof propTypes>;",
      "",
      "const ${TM_FILENAME_BASE}: React.FC<Props> = (props) => {",
      "",
      "return (",
      "  <div>",
      "   ${TM_FILENAME_BASE}",
      "  </div>",
      ")",
      "}",
      "",
      "${TM_FILENAME_BASE}.propTypes = propTypes;",
      "${TM_FILENAME_BASE}.defaultProps = defaultProps;",
      "",
      "export default ${TM_FILENAME_BASE};"
    ]
  },
  "Index.file": {
    "prefix": "tsindex",
    "body": [
      "import ${TM_DIRECTORY} from './${TM_DIRECTORY}';",
      "",
      "export default ${TM_DIRECTORY};"
    ],
    "description": "Index.file"
  }
}